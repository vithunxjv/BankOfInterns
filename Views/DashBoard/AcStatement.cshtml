@model IEnumerable<BOI.Models.GetAcStatement_Result>
@Session["uid"]
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    @Styles.Render("~/Content/css")
</head>
<body>
    <div class="link1"> <h3>Account Statement</h3></div>

    @{
        string url = Url.Action("Logout", "Logout", new { id = Session["uid"] });
    }
    <input type="button" value="Logout" class="submit" onclick="window.location.href = '@url'" />

    <div class="dropdown">
        <button onclick="myFunc()" class="dropbtn">Menu</button>
        <div id="myDropdown" class="dropdown-content" onclick="myFunc()">
            @Html.ActionLink("Branch Details", "BranchDetails", new { id =Session["uid"] })
            @Html.ActionLink("Account Statement", "AcStatement", new { id =Session["uid"] })
            @Html.ActionLink("Account Summary", "AcSummary", new { id =Session["uid"] })
            @Html.ActionLink("Transactions", "Trans", "Transaction", new { id =Session["uid"] },new { })
        </div>
    </div>

    <div class="container">
        @using (Html.BeginForm("AcStatement", "DashBoard", FormMethod.Post))
        {
            @*<div class="row">
                     <div class="col-sm-2 text-lg-left"><label>Statement from</label></div>


                      <input type="date" id="statementdate" name="from" class="statementdate" placeholder="Select Date" />

                <div class="col-sm-2"><label>To Date</label></div>


                    <input type="date" id="statementdate" name="to" class="statementdate" placeholder="Select Date" />*@
            <div class="link">
                <label for="statementdate">Statement from</label>
                <input type="date" id="statementdate" name="from">
                <label for="statementdate">to</label>
                <input type="date" id="statementdate" name="to"><br>

                <input type="submit" id="submit" value="Submit" />

                <br />
                <br />
            </div>

            <table class="table" border="1">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.AccNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AccHolder)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TransType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TransDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Amount)
                    </th>
                    <th></th>
                </tr>
                @if (Model != null)
                {
                    foreach (var item in Model.Where(item => item != null))
                    {
                        <tr>
                            <td>
                                @{
                                    long Account = Convert.ToInt64(item.AccNo);
                                }
                                @Html.DisplayFor(modelItem => Account)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AccHolder)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TransType)
                            </td>
                            <td>
                                @{
                                    string tdate = (item.TransDate).ToString();

                                }
                                @Html.DisplayFor(modelItem => tdate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>

                        </tr>
                    }
                }

            </table>

        }
    </div>
    <script>
        function myFunc() {
            document.getElementById("myDropdown").classList.toggle("show");
        }

        // Close the dropdown menu if the user clicks outside of it
        window.onclick = function (event) {
            if (!event.target.matches('.dropbtn')) {
                var dropdowns = document.getElementsByClassName("dropdown-content");
                var i;
                for (i = 0; i < dropdowns.length; i++) {
                    var openDropdown = dropdowns[i];
                    if (openDropdown.classList.contains('show')) {
                        openDropdown.classList.add('show');
                    }
                }
            }
        }
    </script>
</body>
</html>


